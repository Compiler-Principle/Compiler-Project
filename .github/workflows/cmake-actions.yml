name: cmake-actions

on:
  push:
    branches:
      - main

jobs:
  Make_test:
    name: Make test
    runs-on: ubuntu-latest

    steps:
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: '3.20.x'

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Use cmake
        run: cmake --version

      - name: Use flex
        run: sudo apt install flex

      - name: Use bison
        run: sudo apt install bison

      - name: Use llvm
        run: sudo apt install llvm-10=1:10.0.0-4ubuntu1

      - name: Build
        run: |
          cd ${{ github.workspace }}
          ls -la
          export PATH=/usr/lib/llvm-10/bin:$PATH
          export LD_LIBRARY_PATH=/usr/lib/llvm-10/lib:$LD_LIBRARY_PATH
          export LDFLAGS="-L/usr/lib/llvm-10/lib"
          export CPPFLAGS="-I/usr/include/llvm-10/llvm"
          make clean
          make parser

  build_and_deploy:
    # 在 Github 中显示的 job 名称
    name: Build and Deploy
    # job 运行的环境配置
    runs-on: ubuntu-latest
    # 一个 job 由多个 step 组成
    steps:
      # 当前 step 的名字
      - name: Checkout
        # checkout action 主要用于向 github 仓库拉取源代码
        # https://github.com/actions/checkout
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Cache
        # cache 在这里主要用于缓存 npm，提升构建速率
        # https://github.com/actions/cache
        uses: actions/cache@v2
        # npm 缓存的路径可查看 https://docs.npmjs.com/cli/cache#cache
        # 由于这里 runs-on 是 ubuntu-latest，因此配置 ~/.npm
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use Node.js
        # 配置 Node 执行环境（当前构建的服务器默认没有 Node 环境，可以通过 Action 安装 Node）
        # https://github.com/actions/setup-node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Build
          # 安装 Node 之后就可以执行构建脚本
        run: |
          cd AST/visu
          npm install -g gatsby-cli
          npm install
          npm run build

      - name: Deploy
        # 将构建产物 commit 到一个分支上，用于发布静态站点资源
        # https://github.com/peaceiris/actions-gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          # Github 会在 workflow 中自动生成 GIHUBT_TOKEN，用于认证 workflow 的运行
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # 静态资源目录设置
          publish_dir: ./build
          # 默认发布到 gh-pages 分支上，可以指定特定的发布分支（不能选拉取代码的分支）
          publish_branch: gh-pages
          full_commit_message: ${{ github.event.head_commit.message }}
