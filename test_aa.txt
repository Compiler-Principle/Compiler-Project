int name[105];
int credit[105];
int prereq[105][400];
int grade[105];
int courseCnt;

int input[400000];
int inputlen;

function int mod(int a, int b) {
    return a - (b * (a / b));
}

function int getinput() {
    int i;
    i = 0;
    while(cinResult != -1) {
        cin("%c", &input[i]);
        i = i + 1;
    }
    inputlen = i - 1;
    return 0;
}

function int getGrade(int g) {
    int res;
    
    if(g == 65) {
        res = 4;
    }
    else {
        if(g == 66) {
            res = 3;
        }
        else {
            if(g == 67) {
                res = 2;
            }
            else {
                if(g == 68) {
                    res = 1;
                }
                else {
                    if(g == 70) {
                        res = 0;
                    }
                    else {
                        res = -1;
                    }
                }
            }
        }
    }

    return res;
}

function int printName(int n) {
    int c[4];
    c[0] = mod(n / (256 * 256 * 256), 256);
    c[1] = mod(n / (256 * 256), 256);
    c[2] = mod(n / 256, 256);
    c[3] = mod(n ,256);
    if(c[0] != 0) {
        cout("%c", c[0]);
    }
    if(c[1] != 0) {
        cout("%c", c[1]);
    }
    if(c[2] != 0) {
        cout("%c", c[2]);
    }
    if(c[3] != 0) {
        cout("%c", c[3]);
    }
    return 0;
}

function int main() {
    int i, j;
    int part;
    int cRemain, hAttempt, creditScore, hComplete;
    float gpa;

    getinput();

    i = 0;
    while(i < inputlen) {
        while(input[i] != 124) {
            name[courseCnt] = name[courseCnt] * 256 + input[i];
            i = i + 1;
        }
        i = i + 1;
        credit[courseCnt] = input[i] - 48;
        i = i + 2;
        j = 0;
        while(input[i] != 124) {
            prereq[courseCnt][j] = input[i];
            i = i + 1;
            j = j + 1;
        }
        i = i + 1;
        if(input[i] == 10) {
            grade[courseCnt] = -1;
            i = i + 1;
        }
        else {
            grade[courseCnt] = getGrade(input[i]);
            i = i + 2;
        }
        courseCnt = courseCnt + 1;
    }

    cRemain = 0;
    hAttempt = 0;
    creditScore = 0;
    hComplete = 0;

    i = 0;
    while(i < courseCnt) {
        if(grade[i] == -1) {
            cRemain = cRemain + credit[i];
        }
        else {
            if(grade[i] == 0) {
                hAttempt = hAttempt + credit[i];
                cRemain = cRemain + credit[i];
            }
            else {
                creditScore = creditScore + grade[i] * credit[i];
                hAttempt = hAttempt + credit[i];
                hComplete = hComplete + credit[i];
            }
        }
        i = i + 1;
    }
    if(hAttempt == 0) {
        gpa = 0.0;
    }
    else {
        gpa = (creditScore * 1.0) / hAttempt;
    }
    
    cout("GPA: %.1f\n", gpa);
    cout("Hours Attempted: %d\n", hAttempt);
    cout("Hours Completed: %d\n", hComplete);
    cout("Credits Remaining: %d\n", cRemain);

    return 0;
}