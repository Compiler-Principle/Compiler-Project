Terminals which are not used

   QUOT
   PERCENT
   LINEBREAK
   PERCENTD
   PERCENTF
   BREAK
   CONTINUE


Grammar

    0 $accept: Program $end

    1 Program: Def_list Fun_list

    2 Def_list: Def_list Var SEMI
    3         | /* empty */

    4 Var: Type VarDec

    5 VarDec: ID
    6       | VarDec LB INT RB

    7 Fun_list: Fun_list Fun
    8         | /* empty */

    9 Fun: FunDec CBlock

   10 FunDec: FUNCTION Type ID LP Var_List RP
   11       | FUNCTION Type ID LP RP

   12 Type: TYPEINT
   13     | TYPEFLOAT
   14     | TYPEVOID

   15 Var_List: Var COMMA Var_List
   16         | Var

   17 CBlock: LC Def_list Stmt_list RC

   18 Stmt_list: Stmt Stmt_list
   19          | /* empty */

   20 Stmt: Exp SEMI
   21     | CBlock
   22     | RETURN SEMI
   23     | RETURN Exp SEMI
   24     | IF_Stmt
   25     | If_Else_Stmt
   26     | While_Stmt
   27     | Input_Exp SEMI
   28     | Output_Exp SEMI

   29 IF_Stmt: IF LP Exp RP CBlock

   30 If_Else_Stmt: IF LP Exp RP CBlock ELSE CBlock

   31 While_Stmt: WHILE LP Exp RP CBlock

   32 Input_Exp: INPUT LP FormatStr COMMA Args RP

   33 Output_Exp: OUTPUT LP FormatStr COMMA Args RP
   34           | OUTPUT LP FormatStr RP

   35 Exp: Exp ASSIGN Exp
   36    | Exp AND Exp
   37    | Exp OR Exp
   38    | Exp ADD Exp
   39    | Exp MINUS Exp
   40    | Exp MULT Exp
   41    | Exp DIV Exp
   42    | Exp EQUAL Exp
   43    | Exp LE Exp
   44    | Exp GE Exp
   45    | Exp NE Exp
   46    | Exp LESS Exp
   47    | Exp GREATER Exp
   48    | LOGICAND Exp
   49    | LP Exp RP
   50    | MINUS Exp
   51    | NOT Exp
   52    | ID LP Args RP
   53    | ID LP RP
   54    | Exp LB Exp RB
   55    | Exp DOT ID
   56    | ID
   57    | INT
   58    | FLOAT

   59 Args: Exp COMMA Args
   60     | Exp


Terminals, with rules where they appear

$end (0) 0
error (256)
EQUAL (258) 42
LE (259) 43
GE (260) 44
NE (261) 45
LESS (262) 46
GREATER (263) 47
ASSIGN (264) 35
OR (265) 37
AND (266) 36
NOT (267) 51
ADD (268) 38
MINUS (269) 39 50
MULT (270) 40
DIV (271) 41
QUOT (272)
PERCENT (273)
LOGICAND (274) 48
LINEBREAK (275)
PERCENTD (276)
PERCENTF (277)
SEMI (278) 2 20 22 23 27 28
COMMA (279) 15 32 33 59
DOT (280) 55
LP (281) 10 11 29 30 31 32 33 34 49 52 53
RP (282) 10 11 29 30 31 32 33 34 49 52 53
LB (283) 6 54
RB (284) 6 54
LC (285) 17
RC (286) 17
IF (287) 29 30
ELSE (288) 30
WHILE (289) 31
TYPEINT (290) 12
TYPEFLOAT (291) 13
TYPEVOID (292) 14
RETURN (293) 22 23
BREAK (294)
CONTINUE (295)
FUNCTION (296) 10 11
INPUT (297) 32
OUTPUT (298) 33 34
FormatStr (299) 32 33 34
FLOAT (300) 58
INT (301) 6 57
ID (302) 5 10 11 52 53 55 56


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
Program (49)
    on left: 1, on right: 0
Def_list (50)
    on left: 2 3, on right: 1 2 17
Var (51)
    on left: 4, on right: 2 15 16
VarDec (52)
    on left: 5 6, on right: 4 6
Fun_list (53)
    on left: 7 8, on right: 1 7
Fun (54)
    on left: 9, on right: 7
FunDec (55)
    on left: 10 11, on right: 9
Type (56)
    on left: 12 13 14, on right: 4 10 11
Var_List (57)
    on left: 15 16, on right: 10 15
CBlock (58)
    on left: 17, on right: 9 21 29 30 31
Stmt_list (59)
    on left: 18 19, on right: 17 18
Stmt (60)
    on left: 20 21 22 23 24 25 26 27 28, on right: 18
IF_Stmt (61)
    on left: 29, on right: 24
If_Else_Stmt (62)
    on left: 30, on right: 25
While_Stmt (63)
    on left: 31, on right: 26
Input_Exp (64)
    on left: 32, on right: 27
Output_Exp (65)
    on left: 33 34, on right: 28
Exp (66)
    on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
    53 54 55 56 57 58, on right: 20 23 29 30 31 35 36 37 38 39 40 41
    42 43 44 45 46 47 48 49 50 51 54 55 59 60
Args (67)
    on left: 59 60, on right: 32 33 52 59


state 0

    0 $accept: . Program $end

    $default  reduce using rule 3 (Def_list)

    Program   go to state 1
    Def_list  go to state 2


state 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


state 2

    1 Program: Def_list . Fun_list
    2 Def_list: Def_list . Var SEMI

    TYPEINT    shift, and go to state 4
    TYPEFLOAT  shift, and go to state 5
    TYPEVOID   shift, and go to state 6

    $default  reduce using rule 8 (Fun_list)

    Var       go to state 7
    Fun_list  go to state 8
    Type      go to state 9


state 3

    0 $accept: Program $end .

    $default  accept


state 4

   12 Type: TYPEINT .

    $default  reduce using rule 12 (Type)


state 5

   13 Type: TYPEFLOAT .

    $default  reduce using rule 13 (Type)


state 6

   14 Type: TYPEVOID .

    $default  reduce using rule 14 (Type)


state 7

    2 Def_list: Def_list Var . SEMI

    SEMI  shift, and go to state 10


state 8

    1 Program: Def_list Fun_list .
    7 Fun_list: Fun_list . Fun

    FUNCTION  shift, and go to state 11

    $default  reduce using rule 1 (Program)

    Fun     go to state 12
    FunDec  go to state 13


state 9

    4 Var: Type . VarDec

    ID  shift, and go to state 14

    VarDec  go to state 15


state 10

    2 Def_list: Def_list Var SEMI .

    $default  reduce using rule 2 (Def_list)


state 11

   10 FunDec: FUNCTION . Type ID LP Var_List RP
   11       | FUNCTION . Type ID LP RP

    TYPEINT    shift, and go to state 4
    TYPEFLOAT  shift, and go to state 5
    TYPEVOID   shift, and go to state 6

    Type  go to state 16


state 12

    7 Fun_list: Fun_list Fun .

    $default  reduce using rule 7 (Fun_list)


state 13

    9 Fun: FunDec . CBlock

    LC  shift, and go to state 17

    CBlock  go to state 18


state 14

    5 VarDec: ID .

    $default  reduce using rule 5 (VarDec)


state 15

    4 Var: Type VarDec .
    6 VarDec: VarDec . LB INT RB

    LB  shift, and go to state 19

    $default  reduce using rule 4 (Var)


state 16

   10 FunDec: FUNCTION Type . ID LP Var_List RP
   11       | FUNCTION Type . ID LP RP

    ID  shift, and go to state 20


state 17

   17 CBlock: LC . Def_list Stmt_list RC

    $default  reduce using rule 3 (Def_list)

    Def_list  go to state 21


state 18

    9 Fun: FunDec CBlock .

    $default  reduce using rule 9 (Fun)


state 19

    6 VarDec: VarDec LB . INT RB

    INT  shift, and go to state 22


state 20

   10 FunDec: FUNCTION Type ID . LP Var_List RP
   11       | FUNCTION Type ID . LP RP

    LP  shift, and go to state 23


state 21

    2 Def_list: Def_list . Var SEMI
   17 CBlock: LC Def_list . Stmt_list RC

    NOT        shift, and go to state 24
    MINUS      shift, and go to state 25
    LOGICAND   shift, and go to state 26
    LP         shift, and go to state 27
    LC         shift, and go to state 17
    IF         shift, and go to state 28
    WHILE      shift, and go to state 29
    TYPEINT    shift, and go to state 4
    TYPEFLOAT  shift, and go to state 5
    TYPEVOID   shift, and go to state 6
    RETURN     shift, and go to state 30
    INPUT      shift, and go to state 31
    OUTPUT     shift, and go to state 32
    FLOAT      shift, and go to state 33
    INT        shift, and go to state 34
    ID         shift, and go to state 35

    $default  reduce using rule 19 (Stmt_list)

    Var           go to state 7
    Type          go to state 9
    CBlock        go to state 36
    Stmt_list     go to state 37
    Stmt          go to state 38
    IF_Stmt       go to state 39
    If_Else_Stmt  go to state 40
    While_Stmt    go to state 41
    Input_Exp     go to state 42
    Output_Exp    go to state 43
    Exp           go to state 44


state 22

    6 VarDec: VarDec LB INT . RB

    RB  shift, and go to state 45


state 23

   10 FunDec: FUNCTION Type ID LP . Var_List RP
   11       | FUNCTION Type ID LP . RP

    RP         shift, and go to state 46
    TYPEINT    shift, and go to state 4
    TYPEFLOAT  shift, and go to state 5
    TYPEVOID   shift, and go to state 6

    Var       go to state 47
    Type      go to state 9
    Var_List  go to state 48


state 24

   51 Exp: NOT . Exp

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 49


state 25

   50 Exp: MINUS . Exp

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 50


state 26

   48 Exp: LOGICAND . Exp

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 51


state 27

   49 Exp: LP . Exp RP

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 52


state 28

   29 IF_Stmt: IF . LP Exp RP CBlock
   30 If_Else_Stmt: IF . LP Exp RP CBlock ELSE CBlock

    LP  shift, and go to state 53


state 29

   31 While_Stmt: WHILE . LP Exp RP CBlock

    LP  shift, and go to state 54


state 30

   22 Stmt: RETURN . SEMI
   23     | RETURN . Exp SEMI

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    SEMI      shift, and go to state 55
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 56


state 31

   32 Input_Exp: INPUT . LP FormatStr COMMA Args RP

    LP  shift, and go to state 57


state 32

   33 Output_Exp: OUTPUT . LP FormatStr COMMA Args RP
   34           | OUTPUT . LP FormatStr RP

    LP  shift, and go to state 58


state 33

   58 Exp: FLOAT .

    $default  reduce using rule 58 (Exp)


state 34

   57 Exp: INT .

    $default  reduce using rule 57 (Exp)


state 35

   52 Exp: ID . LP Args RP
   53    | ID . LP RP
   56    | ID .

    LP  shift, and go to state 59

    $default  reduce using rule 56 (Exp)


state 36

   21 Stmt: CBlock .

    $default  reduce using rule 21 (Stmt)


state 37

   17 CBlock: LC Def_list Stmt_list . RC

    RC  shift, and go to state 60


state 38

   18 Stmt_list: Stmt . Stmt_list

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    LC        shift, and go to state 17
    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    RETURN    shift, and go to state 30
    INPUT     shift, and go to state 31
    OUTPUT    shift, and go to state 32
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    $default  reduce using rule 19 (Stmt_list)

    CBlock        go to state 36
    Stmt_list     go to state 61
    Stmt          go to state 38
    IF_Stmt       go to state 39
    If_Else_Stmt  go to state 40
    While_Stmt    go to state 41
    Input_Exp     go to state 42
    Output_Exp    go to state 43
    Exp           go to state 44


state 39

   24 Stmt: IF_Stmt .

    $default  reduce using rule 24 (Stmt)


state 40

   25 Stmt: If_Else_Stmt .

    $default  reduce using rule 25 (Stmt)


state 41

   26 Stmt: While_Stmt .

    $default  reduce using rule 26 (Stmt)


state 42

   27 Stmt: Input_Exp . SEMI

    SEMI  shift, and go to state 62


state 43

   28 Stmt: Output_Exp . SEMI

    SEMI  shift, and go to state 63


state 44

   20 Stmt: Exp . SEMI
   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    EQUAL    shift, and go to state 64
    LE       shift, and go to state 65
    GE       shift, and go to state 66
    NE       shift, and go to state 67
    LESS     shift, and go to state 68
    GREATER  shift, and go to state 69
    ASSIGN   shift, and go to state 70
    OR       shift, and go to state 71
    AND      shift, and go to state 72
    ADD      shift, and go to state 73
    MINUS    shift, and go to state 74
    MULT     shift, and go to state 75
    DIV      shift, and go to state 76
    SEMI     shift, and go to state 77
    DOT      shift, and go to state 78
    LB       shift, and go to state 79


state 45

    6 VarDec: VarDec LB INT RB .

    $default  reduce using rule 6 (VarDec)


state 46

   11 FunDec: FUNCTION Type ID LP RP .

    $default  reduce using rule 11 (FunDec)


state 47

   15 Var_List: Var . COMMA Var_List
   16         | Var .

    COMMA  shift, and go to state 80

    $default  reduce using rule 16 (Var_List)


state 48

   10 FunDec: FUNCTION Type ID LP Var_List . RP

    RP  shift, and go to state 81


state 49

   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   51    | NOT Exp .
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    EQUAL    shift, and go to state 64
    LE       shift, and go to state 65
    GE       shift, and go to state 66
    NE       shift, and go to state 67
    LESS     shift, and go to state 68
    GREATER  shift, and go to state 69
    OR       shift, and go to state 71
    AND      shift, and go to state 72
    ADD      shift, and go to state 73
    MINUS    shift, and go to state 74
    MULT     shift, and go to state 75
    DIV      shift, and go to state 76
    DOT      shift, and go to state 78
    LB       shift, and go to state 79

    $default  reduce using rule 51 (Exp)


state 50

   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   50    | MINUS Exp .
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    MULT  shift, and go to state 75
    DIV   shift, and go to state 76
    DOT   shift, and go to state 78
    LB    shift, and go to state 79

    $default  reduce using rule 50 (Exp)


state 51

   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   48    | LOGICAND Exp .
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    DOT  shift, and go to state 78
    LB   shift, and go to state 79

    $default  reduce using rule 48 (Exp)


state 52

   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   49    | LP Exp . RP
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    EQUAL    shift, and go to state 64
    LE       shift, and go to state 65
    GE       shift, and go to state 66
    NE       shift, and go to state 67
    LESS     shift, and go to state 68
    GREATER  shift, and go to state 69
    ASSIGN   shift, and go to state 70
    OR       shift, and go to state 71
    AND      shift, and go to state 72
    ADD      shift, and go to state 73
    MINUS    shift, and go to state 74
    MULT     shift, and go to state 75
    DIV      shift, and go to state 76
    DOT      shift, and go to state 78
    RP       shift, and go to state 82
    LB       shift, and go to state 79


state 53

   29 IF_Stmt: IF LP . Exp RP CBlock
   30 If_Else_Stmt: IF LP . Exp RP CBlock ELSE CBlock

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 83


state 54

   31 While_Stmt: WHILE LP . Exp RP CBlock

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 84


state 55

   22 Stmt: RETURN SEMI .

    $default  reduce using rule 22 (Stmt)


state 56

   23 Stmt: RETURN Exp . SEMI
   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    EQUAL    shift, and go to state 64
    LE       shift, and go to state 65
    GE       shift, and go to state 66
    NE       shift, and go to state 67
    LESS     shift, and go to state 68
    GREATER  shift, and go to state 69
    ASSIGN   shift, and go to state 70
    OR       shift, and go to state 71
    AND      shift, and go to state 72
    ADD      shift, and go to state 73
    MINUS    shift, and go to state 74
    MULT     shift, and go to state 75
    DIV      shift, and go to state 76
    SEMI     shift, and go to state 85
    DOT      shift, and go to state 78
    LB       shift, and go to state 79


state 57

   32 Input_Exp: INPUT LP . FormatStr COMMA Args RP

    FormatStr  shift, and go to state 86


state 58

   33 Output_Exp: OUTPUT LP . FormatStr COMMA Args RP
   34           | OUTPUT LP . FormatStr RP

    FormatStr  shift, and go to state 87


state 59

   52 Exp: ID LP . Args RP
   53    | ID LP . RP

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    RP        shift, and go to state 88
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp   go to state 89
    Args  go to state 90


state 60

   17 CBlock: LC Def_list Stmt_list RC .

    $default  reduce using rule 17 (CBlock)


state 61

   18 Stmt_list: Stmt Stmt_list .

    $default  reduce using rule 18 (Stmt_list)


state 62

   27 Stmt: Input_Exp SEMI .

    $default  reduce using rule 27 (Stmt)


state 63

   28 Stmt: Output_Exp SEMI .

    $default  reduce using rule 28 (Stmt)


state 64

   42 Exp: Exp EQUAL . Exp

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 91


state 65

   43 Exp: Exp LE . Exp

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 92


state 66

   44 Exp: Exp GE . Exp

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 93


state 67

   45 Exp: Exp NE . Exp

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 94


state 68

   46 Exp: Exp LESS . Exp

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 95


state 69

   47 Exp: Exp GREATER . Exp

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 96


state 70

   35 Exp: Exp ASSIGN . Exp

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 97


state 71

   37 Exp: Exp OR . Exp

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 98


state 72

   36 Exp: Exp AND . Exp

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 99


state 73

   38 Exp: Exp ADD . Exp

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 100


state 74

   39 Exp: Exp MINUS . Exp

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 101


state 75

   40 Exp: Exp MULT . Exp

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 102


state 76

   41 Exp: Exp DIV . Exp

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 103


state 77

   20 Stmt: Exp SEMI .

    $default  reduce using rule 20 (Stmt)


state 78

   55 Exp: Exp DOT . ID

    ID  shift, and go to state 104


state 79

   54 Exp: Exp LB . Exp RB

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp  go to state 105


state 80

   15 Var_List: Var COMMA . Var_List

    TYPEINT    shift, and go to state 4
    TYPEFLOAT  shift, and go to state 5
    TYPEVOID   shift, and go to state 6

    Var       go to state 47
    Type      go to state 9
    Var_List  go to state 106


state 81

   10 FunDec: FUNCTION Type ID LP Var_List RP .

    $default  reduce using rule 10 (FunDec)


state 82

   49 Exp: LP Exp RP .

    $default  reduce using rule 49 (Exp)


state 83

   29 IF_Stmt: IF LP Exp . RP CBlock
   30 If_Else_Stmt: IF LP Exp . RP CBlock ELSE CBlock
   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    EQUAL    shift, and go to state 64
    LE       shift, and go to state 65
    GE       shift, and go to state 66
    NE       shift, and go to state 67
    LESS     shift, and go to state 68
    GREATER  shift, and go to state 69
    ASSIGN   shift, and go to state 70
    OR       shift, and go to state 71
    AND      shift, and go to state 72
    ADD      shift, and go to state 73
    MINUS    shift, and go to state 74
    MULT     shift, and go to state 75
    DIV      shift, and go to state 76
    DOT      shift, and go to state 78
    RP       shift, and go to state 107
    LB       shift, and go to state 79


state 84

   31 While_Stmt: WHILE LP Exp . RP CBlock
   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    EQUAL    shift, and go to state 64
    LE       shift, and go to state 65
    GE       shift, and go to state 66
    NE       shift, and go to state 67
    LESS     shift, and go to state 68
    GREATER  shift, and go to state 69
    ASSIGN   shift, and go to state 70
    OR       shift, and go to state 71
    AND      shift, and go to state 72
    ADD      shift, and go to state 73
    MINUS    shift, and go to state 74
    MULT     shift, and go to state 75
    DIV      shift, and go to state 76
    DOT      shift, and go to state 78
    RP       shift, and go to state 108
    LB       shift, and go to state 79


state 85

   23 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 23 (Stmt)


state 86

   32 Input_Exp: INPUT LP FormatStr . COMMA Args RP

    COMMA  shift, and go to state 109


state 87

   33 Output_Exp: OUTPUT LP FormatStr . COMMA Args RP
   34           | OUTPUT LP FormatStr . RP

    COMMA  shift, and go to state 110
    RP     shift, and go to state 111


state 88

   53 Exp: ID LP RP .

    $default  reduce using rule 53 (Exp)


state 89

   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID
   59 Args: Exp . COMMA Args
   60     | Exp .

    EQUAL    shift, and go to state 64
    LE       shift, and go to state 65
    GE       shift, and go to state 66
    NE       shift, and go to state 67
    LESS     shift, and go to state 68
    GREATER  shift, and go to state 69
    ASSIGN   shift, and go to state 70
    OR       shift, and go to state 71
    AND      shift, and go to state 72
    ADD      shift, and go to state 73
    MINUS    shift, and go to state 74
    MULT     shift, and go to state 75
    DIV      shift, and go to state 76
    COMMA    shift, and go to state 112
    DOT      shift, and go to state 78
    LB       shift, and go to state 79

    $default  reduce using rule 60 (Args)


state 90

   52 Exp: ID LP Args . RP

    RP  shift, and go to state 113


state 91

   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   42    | Exp EQUAL Exp .
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    LE       shift, and go to state 65
    GE       shift, and go to state 66
    LESS     shift, and go to state 68
    GREATER  shift, and go to state 69
    ADD      shift, and go to state 73
    MINUS    shift, and go to state 74
    MULT     shift, and go to state 75
    DIV      shift, and go to state 76
    DOT      shift, and go to state 78
    LB       shift, and go to state 79

    $default  reduce using rule 42 (Exp)


state 92

   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   43    | Exp LE Exp .
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    ADD    shift, and go to state 73
    MINUS  shift, and go to state 74
    MULT   shift, and go to state 75
    DIV    shift, and go to state 76
    DOT    shift, and go to state 78
    LB     shift, and go to state 79

    $default  reduce using rule 43 (Exp)


state 93

   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   44    | Exp GE Exp .
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    ADD    shift, and go to state 73
    MINUS  shift, and go to state 74
    MULT   shift, and go to state 75
    DIV    shift, and go to state 76
    DOT    shift, and go to state 78
    LB     shift, and go to state 79

    $default  reduce using rule 44 (Exp)


state 94

   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   45    | Exp NE Exp .
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    LE       shift, and go to state 65
    GE       shift, and go to state 66
    LESS     shift, and go to state 68
    GREATER  shift, and go to state 69
    ADD      shift, and go to state 73
    MINUS    shift, and go to state 74
    MULT     shift, and go to state 75
    DIV      shift, and go to state 76
    DOT      shift, and go to state 78
    LB       shift, and go to state 79

    $default  reduce using rule 45 (Exp)


state 95

   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   46    | Exp LESS Exp .
   47    | Exp . GREATER Exp
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    ADD    shift, and go to state 73
    MINUS  shift, and go to state 74
    MULT   shift, and go to state 75
    DIV    shift, and go to state 76
    DOT    shift, and go to state 78
    LB     shift, and go to state 79

    $default  reduce using rule 46 (Exp)


state 96

   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   47    | Exp GREATER Exp .
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    ADD    shift, and go to state 73
    MINUS  shift, and go to state 74
    MULT   shift, and go to state 75
    DIV    shift, and go to state 76
    DOT    shift, and go to state 78
    LB     shift, and go to state 79

    $default  reduce using rule 47 (Exp)


state 97

   35 Exp: Exp . ASSIGN Exp
   35    | Exp ASSIGN Exp .
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    EQUAL    shift, and go to state 64
    LE       shift, and go to state 65
    GE       shift, and go to state 66
    NE       shift, and go to state 67
    LESS     shift, and go to state 68
    GREATER  shift, and go to state 69
    ASSIGN   shift, and go to state 70
    OR       shift, and go to state 71
    AND      shift, and go to state 72
    ADD      shift, and go to state 73
    MINUS    shift, and go to state 74
    MULT     shift, and go to state 75
    DIV      shift, and go to state 76
    DOT      shift, and go to state 78
    LB       shift, and go to state 79

    $default  reduce using rule 35 (Exp)


state 98

   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   37    | Exp OR Exp .
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    EQUAL    shift, and go to state 64
    LE       shift, and go to state 65
    GE       shift, and go to state 66
    NE       shift, and go to state 67
    LESS     shift, and go to state 68
    GREATER  shift, and go to state 69
    AND      shift, and go to state 72
    ADD      shift, and go to state 73
    MINUS    shift, and go to state 74
    MULT     shift, and go to state 75
    DIV      shift, and go to state 76
    DOT      shift, and go to state 78
    LB       shift, and go to state 79

    $default  reduce using rule 37 (Exp)


state 99

   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   36    | Exp AND Exp .
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    EQUAL    shift, and go to state 64
    LE       shift, and go to state 65
    GE       shift, and go to state 66
    NE       shift, and go to state 67
    LESS     shift, and go to state 68
    GREATER  shift, and go to state 69
    ADD      shift, and go to state 73
    MINUS    shift, and go to state 74
    MULT     shift, and go to state 75
    DIV      shift, and go to state 76
    DOT      shift, and go to state 78
    LB       shift, and go to state 79

    $default  reduce using rule 36 (Exp)


state 100

   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   38    | Exp ADD Exp .
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    MULT  shift, and go to state 75
    DIV   shift, and go to state 76
    DOT   shift, and go to state 78
    LB    shift, and go to state 79

    $default  reduce using rule 38 (Exp)


state 101

   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   39    | Exp MINUS Exp .
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    MULT  shift, and go to state 75
    DIV   shift, and go to state 76
    DOT   shift, and go to state 78
    LB    shift, and go to state 79

    $default  reduce using rule 39 (Exp)


state 102

   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   40    | Exp MULT Exp .
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    DOT  shift, and go to state 78
    LB   shift, and go to state 79

    $default  reduce using rule 40 (Exp)


state 103

   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   41    | Exp DIV Exp .
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   54    | Exp . LB Exp RB
   55    | Exp . DOT ID

    DOT  shift, and go to state 78
    LB   shift, and go to state 79

    $default  reduce using rule 41 (Exp)


state 104

   55 Exp: Exp DOT ID .

    $default  reduce using rule 55 (Exp)


state 105

   35 Exp: Exp . ASSIGN Exp
   36    | Exp . AND Exp
   37    | Exp . OR Exp
   38    | Exp . ADD Exp
   39    | Exp . MINUS Exp
   40    | Exp . MULT Exp
   41    | Exp . DIV Exp
   42    | Exp . EQUAL Exp
   43    | Exp . LE Exp
   44    | Exp . GE Exp
   45    | Exp . NE Exp
   46    | Exp . LESS Exp
   47    | Exp . GREATER Exp
   54    | Exp . LB Exp RB
   54    | Exp LB Exp . RB
   55    | Exp . DOT ID

    EQUAL    shift, and go to state 64
    LE       shift, and go to state 65
    GE       shift, and go to state 66
    NE       shift, and go to state 67
    LESS     shift, and go to state 68
    GREATER  shift, and go to state 69
    ASSIGN   shift, and go to state 70
    OR       shift, and go to state 71
    AND      shift, and go to state 72
    ADD      shift, and go to state 73
    MINUS    shift, and go to state 74
    MULT     shift, and go to state 75
    DIV      shift, and go to state 76
    DOT      shift, and go to state 78
    LB       shift, and go to state 79
    RB       shift, and go to state 114


state 106

   15 Var_List: Var COMMA Var_List .

    $default  reduce using rule 15 (Var_List)


state 107

   29 IF_Stmt: IF LP Exp RP . CBlock
   30 If_Else_Stmt: IF LP Exp RP . CBlock ELSE CBlock

    LC  shift, and go to state 17

    CBlock  go to state 115


state 108

   31 While_Stmt: WHILE LP Exp RP . CBlock

    LC  shift, and go to state 17

    CBlock  go to state 116


state 109

   32 Input_Exp: INPUT LP FormatStr COMMA . Args RP

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp   go to state 89
    Args  go to state 117


state 110

   33 Output_Exp: OUTPUT LP FormatStr COMMA . Args RP

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp   go to state 89
    Args  go to state 118


state 111

   34 Output_Exp: OUTPUT LP FormatStr RP .

    $default  reduce using rule 34 (Output_Exp)


state 112

   59 Args: Exp COMMA . Args

    NOT       shift, and go to state 24
    MINUS     shift, and go to state 25
    LOGICAND  shift, and go to state 26
    LP        shift, and go to state 27
    FLOAT     shift, and go to state 33
    INT       shift, and go to state 34
    ID        shift, and go to state 35

    Exp   go to state 89
    Args  go to state 119


state 113

   52 Exp: ID LP Args RP .

    $default  reduce using rule 52 (Exp)


state 114

   54 Exp: Exp LB Exp RB .

    $default  reduce using rule 54 (Exp)


state 115

   29 IF_Stmt: IF LP Exp RP CBlock .
   30 If_Else_Stmt: IF LP Exp RP CBlock . ELSE CBlock

    ELSE  shift, and go to state 120

    $default  reduce using rule 29 (IF_Stmt)


state 116

   31 While_Stmt: WHILE LP Exp RP CBlock .

    $default  reduce using rule 31 (While_Stmt)


state 117

   32 Input_Exp: INPUT LP FormatStr COMMA Args . RP

    RP  shift, and go to state 121


state 118

   33 Output_Exp: OUTPUT LP FormatStr COMMA Args . RP

    RP  shift, and go to state 122


state 119

   59 Args: Exp COMMA Args .

    $default  reduce using rule 59 (Args)


state 120

   30 If_Else_Stmt: IF LP Exp RP CBlock ELSE . CBlock

    LC  shift, and go to state 17

    CBlock  go to state 123


state 121

   32 Input_Exp: INPUT LP FormatStr COMMA Args RP .

    $default  reduce using rule 32 (Input_Exp)


state 122

   33 Output_Exp: OUTPUT LP FormatStr COMMA Args RP .

    $default  reduce using rule 33 (Output_Exp)


state 123

   30 If_Else_Stmt: IF LP Exp RP CBlock ELSE CBlock .

    $default  reduce using rule 30 (If_Else_Stmt)
